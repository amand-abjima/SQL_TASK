--DATA MANIPULATION OPERATIONS

--SELECT

SELECT * FROM STUDENT1;

SELECT SID,FULLNAME FROM STUDENT1;

--INSERT

INSERT INTO STUDENT1 VALUES('STU/008','RISHAB',1,'03/04/2004'); -- 1 is for gender 'Male' and 2 is for 'Female'.

--UPDATE

UPDATE STUDENT1 SET GENDER=3; --It will change all the rows because no condition is specified.

UPDATE STUDENT1 SET GENDER = 1 WHERE SID='STU/001'; -- It will change a record according to condition.

UPDATE STUDENT1 SET GENDER = 2 WHERE FULLNAME='NEHA';

UPDATE STUDENT1 SET GENDER = 1 WHERE DOB='1999-09-06';

UPDATE STUDENT1 SET GENDER = 1 WHERE SID='STU/004';

UPDATE STUDENT1 SET GENDER = 2 WHERE FULLNAME='SHALINI';

--DELETE

DELETE STUDENT1; --It will delete all the records of table.

DELETE FROM STUDENT1 WHERE SID='STU/007'; -- It will delete specific record.

DELETE FROM STUDENT1 WHERE fullname='rishab';


--STORED PROCEDURE

CREATE PROCEDURE SP_STUDENT
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	INSERT INTO STUDENT1 VALUES('STU/007','RISHAB',1,'2004/10/02');
	
	--Update statements for procedure here
	UPDATE STUDENT1 SET GENDER=1 WHERE FULLNAME='TANU'

	--Select statements for procedure here
	SELECT * FROM STUDENT1;
	
END
GO

-- SELECT TOP N RECORDS

SELECT TOP 2 * FROM STUDENT1; --IT will not filter or sort data.

SELECT TOP 6 * FROM STUDENT1;

SELECT TOP 10 * FROM STUDENT1;

-- SORTING SELECTED RECORDS FROM TABLE.

-- SELECT TOP 5 MALE STUDENTS

SELECT TOP 5 * FROM STUDENT1 ORDER BY GENDER; -- It will show top 5 Male records.

SELECT TOP 2 * FROM STUDENT1 ORDER BY GENDER DESC; -- It will show top 2 Female records.

SELECT * FROM STUDENT1 ORDER BY GENDER ASC; -- IT WILL SORT DATA IN ASCENDING ORDER ACCORDING TO GENDER COLUMN.

SELECT * FROM STUDENT1 ORDER BY GENDER DESC; -- IT WILL SORT DATA IN DESCENDING ORDER ACCORDING TO GENDER COLUMN.

--Narrowing down result set with WHERE clause

--Write a query to retrieve data of all female students from STUDENT1 table.

SELECT * FROM STUDENT1 WHERE GENDER = 2;

--Write a query to retrieve data of all male students from STUDENT1 table.

SELECT * FROM STUDENT1 WHERE GENDER = 1;

-- Write a query to retrieve data of top 3 youngest male students.

SELECT TOP 3 * FROM STUDENT1 WHERE GENDER = 1 ORDER BY DOB DESC;

-- Write a query to retrieve data of top 3 oldest male students.

SELECT TOP 3 * FROM STUDENT1 WHERE GENDER = 1 ORDER BY DOB;

-- Write a query to reterive data of all male students who have born before 2000.

SELECT * FROM STUDENT1 WHERE GENDER = 1 AND DOB < '2000/01/01';

-- Write a query to reterive data of all male students who have born after 2000.

SELECT * FROM STUDENT1 WHERE GENDER = 1 AND DOB > '2000/01/01';

-- Write a query to reterive data of all students who have born before 2000.

SELECT * FROM STUDENT1 WHERE DOB < '2000/01/01';

-- Write a query to reterive data of all students who have born after 2000.

SELECT * FROM STUDENT1 WHERE DOB > '2000/01/01';

CREATE TABLE COURSE(SCID INT PRIMARY KEY,COURSECODE NVARCHAR(20),COURSETITLE NVARCHAR(50),SEMESTER INT,SIID NVARCHAR(50) REFERENCES STUDENT1(SID));

INSERT INTO COURSE VALUES(7,'COMP-401','PYTHON',3,'STU/007');

SELECT * FROM COURSE;

SELECT * FROM STUDENT1 WHERE SID IN(SELECT SIID FROM COURSE WHERE COURSETITLE='PYTHON');

SELECT S.SID,S.FULLNAME,C.COURSETITLE,C.COURSECODE FROM STUDENT1 S JOIN COURSE C ON S.SID=C.SIID;

SELECT S.SID,S.FULLNAME,C.COURSETITLE,C.COURSECODE FROM STUDENT1 S LEFT JOIN COURSE C ON S.SID=C.SIID;

SELECT S.SID,S.FULLNAME,C.COURSETITLE,C.COURSECODE,C.SEMESTER FROM STUDENT1 S RIGHT JOIN COURSE C ON S.SID=C.SIID;

SELECT S.SID,S.FULLNAME,C.COURSETITLE,C.COURSECODE,C.SEMESTER FROM STUDENT1 S CROSS JOIN COURSE C;

SELECT S.SID,S.FULLNAME,S.DOB,C.COURSETITLE,C.COURSECODE,C.SEMESTER FROM STUDENT1 S FULL JOIN COURSE C ON S.SID=C.SIID;

SELECT S.SID,S.FULLNAME,C.COURSETITLE,C.COURSECODE,C.SEMESTER FROM STUDENT1 S, COURSE C WHERE S.SID=C.SIID;

SELECT S.SID,S.FULLNAME,C.COURSETITLE,C.COURSECODE,C.SEMESTER FROM STUDENT1 S, COURSE C WHERE S.SID >C.SIID;

SELECT S.SID,S.FULLNAME,C.COURSETITLE,C.COURSECODE,C.SEMESTER FROM STUDENT1 S, COURSE C WHERE S.SID>=C.SIID;

SELECT S.SID,S.FULLNAME,C.COURSETITLE,C.COURSECODE,C.SEMESTER FROM STUDENT1 S, COURSE C WHERE S.SID<=C.SIID;